services:
  redis:
    image: redis:7.4.2-alpine
    container_name: image-processing-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/data
    networks:
      - bullmq_network
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: image-processing-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio_volume:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  minio-init:
    image: minio/mc
    container_name: image-processing-minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        until mc alias set local http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}; do
          echo 'MinIO not ready...';
          sleep 2;
        done;
        mc mb local/${AWS_S3_BUCKET_NAME};
        echo 'Bucket created.'
      "
    restart: "no"

  postgres:
    image: postgres:17.4-alpine3.21
    container_name: image-processing-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bullmq_network
    restart: unless-stopped

networks:
  bullmq_network:
    driver: bridge

volumes:
  redis_volume:
    driver: local
  minio_volume:
    driver: local
  postgres_data:
    driver: local
